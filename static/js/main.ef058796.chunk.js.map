{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","useState","leftText","setLeftText","rightText","setRightText","onChangeText","event","target","dataset","left","value","right","useEffect","getLeftText","localStorage","getItem","getRightText","JSON","parse","setItem","stringify","className","data-left","onChange","data-right","onClick","clear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMA0DeA,MAvDf,WAAgB,IAAD,EACqBC,mBAAiB,IADtC,mBACJC,EADI,KACMC,EADN,OAEuBF,mBAAiB,IAFxC,mBAEJG,EAFI,KAEOC,EAFP,KAILC,EAAe,SAACC,GACdA,EAAMC,OAAOC,QAAQC,MACrBP,EAAYI,EAAMC,OAAOG,OAEzBJ,EAAMC,OAAOC,QAAQG,OACrBP,EAAaE,EAAMC,OAAOG,QA8BlC,OAfAE,qBAAU,WACN,IAAMC,EAAcC,aAAaC,QAAQ,QACnCC,EAAeF,aAAaC,QAAQ,SAO1C,OANIC,GACAZ,EAAaa,KAAKC,MAAMF,IAExBH,GACAX,EAAYe,KAAKC,MAAML,IAEpB,WACHC,aAAaK,QAAQ,OAAQF,KAAKG,UAAUnB,IAC5Ca,aAAaK,QAAQ,QAASF,KAAKG,UAAUjB,OAElD,IAEI,gCACH,sBAAKkB,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAf,SACI,0BAAUA,UAAW,aAAcC,YAAW,OAAQZ,MAAOT,EAAUsB,SAAUlB,EAAjF,SAAgGJ,MAEpG,qBAAKoB,UAAU,QAAf,SACI,0BAAUA,UAAW,aAAcG,aAAY,QAASd,MAAOP,EAAWoB,SAAUlB,EAApF,SAAmGF,SAG3G,sBAAKkB,UAAU,UAAf,UACI,wBAAQI,QApCD,WACXX,aAAaK,QAAQ,OAAQF,KAAKG,UAAUnB,IAC5Ca,aAAaK,QAAQ,QAASF,KAAKG,UAAUjB,KAkCzC,kBACA,wBAAQsB,QAhCG,WACfrB,EAAa,IACbF,EAAY,IACZY,aAAaY,SA6BT,2BCvCGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ef058796.chunk.js","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n    const [leftText, setLeftText] = useState<string>('')\n    const [rightText, setRightText] = useState<string>('')\n\n    const onChangeText = (event: ChangeEvent<HTMLTextAreaElement>) => {\n        if (event.target.dataset.left) {\n            setLeftText(event.target.value)\n        }\n        if (event.target.dataset.right) {\n            setRightText(event.target.value)\n        }\n    }\n\n    const onSave = () => {\n        localStorage.setItem('left', JSON.stringify(leftText))\n        localStorage.setItem('right', JSON.stringify(rightText))\n    }\n\n    const removeText = () => {\n        setRightText('')\n        setLeftText('')\n        localStorage.clear()\n    }\n\n    useEffect(() => {\n        const getLeftText = localStorage.getItem('left')\n        const getRightText = localStorage.getItem('right')\n        if (getRightText) {\n            setRightText(JSON.parse(getRightText))\n        }\n        if (getLeftText) {\n            setLeftText(JSON.parse(getLeftText))\n        }\n        return () => {\n            localStorage.setItem('left', JSON.stringify(leftText))\n            localStorage.setItem('right', JSON.stringify(rightText))\n        }\n    }, [])\n\n    return <div>\n        <div className=\"notebook\">\n            <div className=\"left\">\n                <textarea className={'page-inner'} data-left={'left'} value={leftText} onChange={onChangeText}>{leftText}</textarea>\n            </div>\n            <div className=\"right\">\n                <textarea className={'page-inner'} data-right={'right'} value={rightText} onChange={onChangeText}>{rightText}</textarea>\n            </div>\n        </div>\n        <div className=\"buttons\">\n            <button onClick={onSave}>Save</button>\n            <button onClick={removeText}>Delete</button>\n        </div>\n    </div>\n\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}